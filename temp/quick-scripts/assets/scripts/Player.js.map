{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpAudio","default","type","AudioClip","jumpHeight","jumpDuration","maxMoveSpeed","accel","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onLoad","jumpAction","node","runAction","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","event","keyCode","macro","KEY","a","d","onDestroy","off","start","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        // 跳跃音效资源\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n    },\r\n    setJumpAction() {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    onLoad() {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n        // 初始化键盘输入监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onKeyDown(event) {\r\n        // set a flag when key pressed\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n    },\r\n    onKeyUp(event) {\r\n        // unset a flag when key released\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n    onDestroy() {\r\n        // 取消键盘输入监听\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n    start() {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n});"]}